# Переменные
# В предыдущих упражнениях мы уже использовали переменные, но авторы курса до сих пор не объясняли, что же это такое и с чем его едят.

# Мы знаем, что команда input() обозначает «подожди, пока пользователь введет что-нибудь с клавиатуры, и запомни то, что он ввёл». 
# Просто так просить «запомнить» довольно бессмысленно:
# нам ведь потом надо будет как-то сказать компьютеру, чтобы он вспомнил то, что запомнил.
# Для этого используем переменные и пишем такой код:

# variable_name = input()
# print('Вы ввели текст:', variable_name)
# Данный код означает: «Сохрани то, что ввёл пользователь, в памяти, и дальше это место в памяти мы будем называть именем variable_name». 
# Соответственно, команда print(variable_name) означает: «Посмотри, что лежит в памяти, под именем variable_name, и выведи это на экран».

# Вот такие «места в памяти» называются переменными. Любая переменная имеет имя и значение.

# Имя переменной
# В имени переменной используйте только латинские буквы a-z, A-Z, цифры и символ нижнего подчеркивания (_);

# Имя переменной не может начинаться с цифры;

# Имя переменной по возможности должно отражать её назначение.

# Запомни: Python — регистрочувствительный язык. Переменная name и Name — две совершенно разные переменные.
# Для именования переменных принято использовать стиль lower_case_with_underscores (слова из маленьких букв с подчеркиваниями).

# Значение переменной
# Значение переменной — сохраненная в ней информация. Это может быть текст, число и т.д.

# Знак «=» это оператор присваивания. Он присваивает значение, которое находится справа от знака «равно»,
# переменной, которая находится слева от знака «равно».

# В нашем случае это то, что поместил в неё пользователь командой input(). Это текстовое значение — строка. 
# То есть переменная сохраняет в себе строковое значение. 
# Говорят, что переменная имеет строковый тип данных.

# Запомни: интерпретатор ждет, что пользователь что-то введет с клавиатуры ровно столько раз, сколько команд input() встречается в программе.
# Каждый input() завершается нажатием Enter на клавиатуре.

# Значения переменной, естественно, можно менять (переприсваивать).

# print('Как тебя зовут?')
# name = input()
# print('Привет,', name)
# name = 'Timur'
# print('Привет,', name)
# Оператор присваивания сообщает переменной то или иное значение независимо от того, была ли эта переменная введена раньше.
# Вы можете менять значение переменной, записав еще один оператор присваивания.
# Если у нас имеется переменная, мы можем делать с её значением все что угодно — например, присвоить другой переменной:

# name1 = 'Тимур'
# name2 = name1
# print(name2)
# Итак, если вы хотите, чтобы у вас была переменная с каким-то именем и каким-то значением, нужно написать на отдельной строчке:

# <имя переменной> = <значение переменной>


# Как только эта команда выполнится, в программе появится переменная с указанным значением.

# Запомни: название переменной всегда должно быть слева от знака равенства.

# Следующий код приведет к ошибке:  'Timur' = name.

# Множественное присваивание
# В языке Python можно за одну инструкцию присваивания изменять значение сразу нескольких переменных. Делается это так:

# name, surname = 'Timur', 'Guev'
# print('Имя:', name, 'Фамилия:', surname)
# Этот код можно записать и так:

# name = 'Timur'
# surname = 'Guev'
# print('Имя:', name, 'Фамилия:', surname)
# Отличие двух способов состоит в том, что множественное присваивание в первом способе присваивает значение двум переменным одновременно.

# Если требуется считать текст с клавиатуры и присвоить его в качестве значения переменным, то можно написать так: 

# name, surname = input(), input()
# print('Имя:', name, 'Фамилия:', surname)
# Если слева от знака «равно» в множественном присваивании должны стоять через запятую имена переменных, 
# то справа могут стоять произвольные выражения, разделённые запятыми.
# Главное, чтобы слева и справа от знака присваивания было одинаковое число элементов.

# Множественное присваивание удобно использовать, когда нужно обменять значения двух переменных. В Python это делается так:

# name1 = 'Timur'
# name2 = 'Gvido'
# name1, name2 = name2, name1
# Примечания
# Примечание 1. Названия переменных ничего не говорят интерпретатору, 
# и даже в очень хорошо названной переменной не появится нужное значение, если мы сами его туда не запишем.

# Примечание 2. Новое значение переменной вытесняет старое. Важно представлять, чему равно значение переменной в каждый момент времени.

# Примечание 3. Переменные можно вводить в любой момент (не только в самом начале программы).

# Примечание 4. В качестве названия переменных запрещено использовать ключевые (зарезервированные) слова. 
# К ключевым словам в языке Python относятся:

# False;
# True;
# None;
# and;
# with;
# as;
# assert;
# break;
# class;
# continue;
# def;
# del;
# elif;
# else;
# except;
# finally;
# try;
# for;
# from;
# global;
# if;
# import;
# in;
# is;
# lambda;
# nonlocal;
# not;
# or;
# pass;
# raise;
# return;
# while;
# yield.